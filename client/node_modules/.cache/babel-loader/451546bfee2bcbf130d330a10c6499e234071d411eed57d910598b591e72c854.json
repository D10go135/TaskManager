{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\36129382023.1n\\\\TaskManager\\\\client\\\\src\\\\components\\\\TaskList.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { List, ListItem, ListItemText, Checkbox, IconButton, Typography } from '@mui/material';\nimport { Delete, Edit } from '@mui/icons-material';\nimport api from '../api';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TaskList = () => {\n  _s();\n  const [tasks, setTasks] = useState([]);\n  const navigate = useNavigate();\n  useEffect(() => {\n    fetchTasks();\n  }, []);\n  const fetchTasks = async () => {\n    try {\n      const response = await api.get('/tasks');\n      setTasks(response.data);\n    } catch (error) {\n      console.error('Erro ao buscar tarefas:', error);\n    }\n  };\n  const handleToggleComplete = async (taskId, completed) => {\n    try {\n      await api.patch(`/tasks/${taskId}`, {\n        completed: !completed\n      });\n      setTasks(tasks.map(task => task.id === taskId ? {\n        ...task,\n        completed: !completed\n      } : task));\n    } catch (error) {\n      console.error('Erro ao atualizar tarefa:', error);\n    }\n  };\n  const handleDelete = async taskId => {\n    try {\n      await api.delete(`/tasks/${taskId}`);\n      setTasks(tasks.filter(task => task.id !== taskId));\n    } catch (error) {\n      console.error('Erro ao deletar tarefa:', error);\n    }\n  };\n  const handleEdit = taskId => {\n    navigate(`/tasks/${taskId}/edit`);\n  };\n  return /*#__PURE__*/_jsxDEV(List, {\n    children: tasks.length === 0 ? /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"body1\",\n      children: \"Nenhuma tarefa encontrada\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }, this) : tasks.map(task => /*#__PURE__*/_jsxDEV(ListItem, {\n      children: [/*#__PURE__*/_jsxDEV(Checkbox, {\n        checked: task.completed,\n        onChange: () => handleToggleComplete(task.id, task.completed)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n        primary: task.title,\n        secondary: `${task.subject} - ${new Date(task.dueDate).toLocaleDateString()}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n        edge: \"end\",\n        \"aria-label\": \"edit\",\n        onClick: () => handleEdit(task.id),\n        children: /*#__PURE__*/_jsxDEV(Edit, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n        edge: \"end\",\n        \"aria-label\": \"delete\",\n        onClick: () => handleDelete(task.id),\n        children: /*#__PURE__*/_jsxDEV(Delete, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 13\n      }, this)]\n    }, task.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 11\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n};\n_s(TaskList, \"mP0t/edHjXqSrQwGHZvoFmDCs3M=\", false, function () {\n  return [useNavigate];\n});\n_c = TaskList;\nexport default TaskList;\nvar _c;\n$RefreshReg$(_c, \"TaskList\");","map":{"version":3,"names":["React","useEffect","useState","List","ListItem","ListItemText","Checkbox","IconButton","Typography","Delete","Edit","api","useNavigate","jsxDEV","_jsxDEV","TaskList","_s","tasks","setTasks","navigate","fetchTasks","response","get","data","error","console","handleToggleComplete","taskId","completed","patch","map","task","id","handleDelete","delete","filter","handleEdit","children","length","variant","fileName","_jsxFileName","lineNumber","columnNumber","checked","onChange","primary","title","secondary","subject","Date","dueDate","toLocaleDateString","edge","onClick","_c","$RefreshReg$"],"sources":["C:/Users/36129382023.1n/TaskManager/client/src/components/TaskList.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { List, ListItem, ListItemText, Checkbox, IconButton, Typography } from '@mui/material';\r\nimport { Delete, Edit } from '@mui/icons-material';\r\nimport api from '../api';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nconst TaskList = () => {\r\n  const [tasks, setTasks] = useState([]);\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    fetchTasks();\r\n  }, []);\r\n\r\n  const fetchTasks = async () => {\r\n    try {\r\n      const response = await api.get('/tasks');\r\n      setTasks(response.data);\r\n    } catch (error) {\r\n      console.error('Erro ao buscar tarefas:', error);\r\n    }\r\n  };\r\n\r\n  const handleToggleComplete = async (taskId, completed) => {\r\n    try {\r\n      await api.patch(`/tasks/${taskId}`, { completed: !completed });\r\n      setTasks(tasks.map(task => \r\n        task.id === taskId ? { ...task, completed: !completed } : task\r\n      ));\r\n    } catch (error) {\r\n      console.error('Erro ao atualizar tarefa:', error);\r\n    }\r\n  };\r\n\r\n  const handleDelete = async (taskId) => {\r\n    try {\r\n      await api.delete(`/tasks/${taskId}`);\r\n      setTasks(tasks.filter(task => task.id !== taskId));\r\n    } catch (error) {\r\n      console.error('Erro ao deletar tarefa:', error);\r\n    }\r\n  };\r\n\r\n  const handleEdit = (taskId) => {\r\n    navigate(`/tasks/${taskId}/edit`);\r\n  };\r\n\r\n  return (\r\n    <List>\r\n      {tasks.length === 0 ? (\r\n        <Typography variant=\"body1\">Nenhuma tarefa encontrada</Typography>\r\n      ) : (\r\n        tasks.map((task) => (\r\n          <ListItem key={task.id}>\r\n            <Checkbox\r\n              checked={task.completed}\r\n              onChange={() => handleToggleComplete(task.id, task.completed)}\r\n            />\r\n            <ListItemText\r\n              primary={task.title}\r\n              secondary={`${task.subject} - ${new Date(task.dueDate).toLocaleDateString()}`}\r\n            />\r\n            <IconButton edge=\"end\" aria-label=\"edit\" onClick={() => handleEdit(task.id)}>\r\n              <Edit />\r\n            </IconButton>\r\n            <IconButton edge=\"end\" aria-label=\"delete\" onClick={() => handleDelete(task.id)}>\r\n              <Delete />\r\n            </IconButton>\r\n          </ListItem>\r\n        ))\r\n      )}\r\n    </List>\r\n  );\r\n};\r\n\r\nexport default TaskList;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}